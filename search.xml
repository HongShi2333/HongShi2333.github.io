<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>将Coze机器人部署至Discord服务器</title>
      <link href="//post/14780.html"/>
      <url>//post/14780.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是红石Hong</p><p>这篇文章告诉大家如何在Discord上部署免费的GPT3.5&#x2F;4.0。</p><h3 id="Publish-to-Discord-发布到-Discord"><a href="#Publish-to-Discord-发布到-Discord" class="headerlink" title="Publish to Discord  发布到 Discord"></a>Publish to Discord  发布到 Discord</h3><p>You can publish your Coze bot to Discord and chat with it in Discord channels.<br>您可以将 Coze 机器人发布到 Discord 并在 Discord 频道中与之聊天。</p><p>👀 Publishing to Discord has become easier<br>👀 发布到 Discord 变得更加容易</p><p>We’ve optimized the Discord publishing process. With just few simple steps, you can get your bot running on Discord now!<br>我们优化了 Discord 发布流程。只需几个简单的步骤，您现在就可以让您的机器人在 Discord 上运行！</p><p><img src="/../images/discord/1.png" alt="1"></p><h4 id="将-Coze-Bot-发布到-Discord"><a href="#将-Coze-Bot-发布到-Discord" class="headerlink" title="将 Coze Bot 发布到 Discord"></a>将 Coze Bot 发布到 Discord</h4><p>Go to Discord Developer Portal and Create an Application</p><p>转到 Discord 开发者门户并创建应用程序</p><p>Go to the Discord Developer Portal. At the top of the Applications page, click “New Application”.<br>转到 Discord 开发者门户。在“应用程序”页面的顶部，单击“新建应用程序”。</p><p>After filling in the Application name, you can create a new Discord application.<br>填写应用程序名称后，您可以创建一个新的 Discord 应用程序。</p><p><img src="/../images/discord/2.png" alt="2"></p><p>Enable Discord Intents</p><p>启用 Discord 意图<br>In the Application configuration page, switch to “Bot” tab.<br>在“应用程序配置”页面中，切换到“机器人”选项卡。</p><p>In the Privileged Gateway Intents section, enable three permissions (Presence Intent, Server Members Intent, Message Content Intent).<br>在“特权网关意向”部分中，启用三个权限（状态意向、服务器成员意向、消息内容意向）。</p><p>Remember to click save! 记得点击保存！</p><p><img src="/../images/discord/3.png" alt="3"></p><p>Generate a Discord Bot Token</p><p>生成 Discord 机器人令牌<br>Below the Bot name, click “Reset Token” to generate a new Bot Token, and copy it.<br>在 Bot 名称下方，单击“重置令牌”以生成新的 Bot 令牌，然后复制它。</p><p><img src="/../images/discord/4.png" alt="4"></p><p><img src="/../images/discord/5.png" alt="5"></p><p>Set the Bot Token in Coze</p><p>在 Coze 中设置 Bot Token<br>Go to Coze bot’s publishing page, click “Configure”<br>进入Coze bot的发布页面，点击“配置”</p><p><img src="/../images/discord/6.png" alt="6"></p><p>Paste the Discord bot token and click “Save”.<br>粘贴 Discord 机器人令牌，然后单击“保存”。</p><p><img src="/../images/discord/7.png" alt="7"></p><p>Finally, Publish the Coze Bot to Discord</p><p>最后，将 Coze 机器人发布到 Discord<br>Now, you can publish the bot to Discord via Coze!<br>现在，您可以通过 Coze 将机器人发布到 Discord！<img src="/../images/discord/8.png" alt="8"></p><p>After publishing, click “Open in Discord” to chat with your bot in Discord, or “Copy link” to share your Discord bot with your friends.<br>发布后，单击“在 Discord 中打开”以在 Discord 中与您的机器人聊天，或单击“复制链接”与您的朋友分享您的 Discord 机器人。</p><p><img src="/../images/discord/9.png" alt="9"></p><h4 id="Restart-Discord-Bot-重启-Discord-Bot"><a href="#Restart-Discord-Bot-重启-Discord-Bot" class="headerlink" title="Restart Discord Bot  重启 Discord Bot"></a>Restart Discord Bot  重启 Discord Bot</h4><p>If there is no user interaction with your Discord Bot for more than one week, the Discord Bot will be automatically offline. You can restart the Bot by republishing it in Coze.<br>如果超过一周没有用户与您的 Discord 机器人互动，Discord 机器人将自动离线。您可以通过在 Coze 中重新发布机器人来重新启动它。</p><p><img src="/../images/discord/10.png" alt="10"></p><p>FAQ</p><ol><li>Why my Discord Bot does not respond?</li><li>为什么我的 Discord Bot 没有响应？<br>Please check if you have missed any of the above steps. Key omissions may include:<br>请检查您是否错过了上述任何步骤。主要遗漏可能包括：</li></ol><p>Enabling the three Discord intents and clicking “Save”;<br>启用三个 Discord 意图并单击“保存”;<br>Binding the Discord Bot Token to the Bot in Coze and successfully publishing it.<br>将 Discord Bot Token 绑定到 Coze 中的 Bot 并成功发布。<br>In addition, in the Discord chat page, please ensure you are @Bot, not @Role.<br>此外，在 Discord 聊天页面中，请确保您@Bot，而不是@Role。</p><p><img src="/../images/discord/11.png" alt="11"></p><p>搬运自<a href="https://www.coze.com/docs/publish/discord.html">coze官方教程</a></p><h3 id="将Discord机器人加入至自己的服务器"><a href="#将Discord机器人加入至自己的服务器" class="headerlink" title="将Discord机器人加入至自己的服务器"></a>将Discord机器人加入至自己的服务器</h3><p>首先，您需要在 Discord 中创建一个新服务器（或获得现有服务器的管理员权限）。在浏览器中打开您的 Discord 帐户页面 - 这样可以更轻松地在设置页面之间导航。</p><p>从设置菜单返回并右键单击所需的频道 (1)，在弹出菜单中，选择复制 ID - 您的频道 ID 将被复制 (2)。将它保存在任何文本文档中，这样您就不会回到这一步。</p><h2 id="创建一个机器人并将其添加到服务器，复制机器人令牌"><a href="#创建一个机器人并将其添加到服务器，复制机器人令牌" class="headerlink" title="创建一个机器人并将其添加到服务器，复制机器人令牌"></a>创建一个机器人并将其添加到服务器，复制机器人令牌</h2><p>要创建机器人，请转到专门的<a href="https://discord.com/developers/">Discord开发人员页面</a>。在不退出 Discord 帐户的情况下，在相邻的浏览器选项卡中打开它。</p><p>首先，您需要创建一个应用程序，然后在该应用程序中创建一个机器人并为其配置权限，然后才将机器人添加到服务器。</p><p>在<em>应用程序</em>选项卡上，选择<em>新建应用程序</em>。</p><p><img src="/../images/discord2/1.png" alt="1"></p><p>首先，您需要创建一个应用程序，然后在该应用程序中创建一个机器人并为其配置权限，然后才将机器人添加到服务器。</p><p><img src="/../images/discord2/2.png" alt="2"></p><p>应用程序已创建。转到 Bot (1) 选项卡，然后单击添加 Bot 以添加新机器人。</p><p><img src="/../images/discord2/3.png" alt="3"></p><p>同意向您的应用程序添加机器人。</p><p><img src="/../images/discord2/4.png" alt="4"></p><p>机器人已经创建。关于它的所有信息都将显示在 Bot 选项卡上。您可以在此处更改其名称、添加图像并复制机器人令牌 (1)。您将需要此令牌来在 Appmaster.io 平台上配置 Discord 模块。每次进行更改时，开发人员门户都会提示您保存它们 (2)。</p><p>保存机器人令牌，以便您在后续配置过程中不会返回到此步骤。</p><p><img src="/../images/discord2/5.png" alt="5"></p><p>现在转到<em>OAuth2</em> (1) 选项卡 - 在这里您可以配置权限并获取指向您的机器人的链接。在<em>SCOPES</em>部分，选择<em>bot</em> (2)，在<em>BOT PERMISSIONS</em>中，标记您要授予它的权限，在我们的例子中 - 我们只发送消息，因此选择<em>Send Message</em> (3)。然后复制自动生成的 Discord 链接 (4)。</p><p><img src="/../images/discord2/6.png" alt="6"></p><p>将复制的链接粘贴到浏览器的地址栏中并点击它 - 您的应用程序窗口将打开。从下拉列表 (1) 中选择您的服务器，然后单击<em>继续</em>(2)。</p><p><img src="/../images/discord2/7.png" alt="7"></p><p>确保仅授予应用程序（以及在其中创建的机器人）必要的权限，然后将其添加到您的服务器。</p><p><img src="/../images/discord2/8.png" alt="8"></p><p>确保仅授予应用程序（以及在其中创建的机器人）必要的权限，然后将其添加到您的服务器。</p><p><img src="/../images/discord2/9.png" alt="9"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科技 </tag>
            
            <tag> 人工智能 </tag>
            
            <tag> 软件 </tag>
            
            <tag> 部署 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>小众好用软件</title>
      <link href="//post/36809.html"/>
      <url>//post/36809.html</url>
      
        <content type="html"><![CDATA[<h4 id="声音"><a href="#声音" class="headerlink" title="声音"></a>声音</h4><h5 id="LX-Music"><a href="#LX-Music" class="headerlink" title="LX Music"></a>LX Music</h5><p><a href="https://docs.lxmusic.top/">下载地址</a></p><p><a href="https://github.com/lyswhut/lx-music-desktop">开源地址</a></p><h5 id="方格音乐"><a href="#方格音乐" class="headerlink" title="方格音乐"></a>方格音乐</h5><p><a href="http://morin.vin/">下载地址</a></p><h5 id="Listen-1（插件）"><a href="#Listen-1（插件）" class="headerlink" title="Listen 1（插件）"></a>Listen 1（插件）</h5><p><a href="https://microsoftedge.microsoft.com/addons/detail/listen-1/bcneiehcbgahghfmgigmblcgkhihehad">下载地址</a></p><h5 id="Elpy"><a href="#Elpy" class="headerlink" title="Elpy"></a>Elpy</h5><p><a href="https://apps.microsoft.com/store/detail/elpy/9NH3PH6413PR?hl=zh-cn&gl=cn">下载地址</a></p><h4 id="下载"><a href="#下载" class="headerlink" title="下载"></a>下载</h4><h5 id="IDM下载器"><a href="#IDM下载器" class="headerlink" title="IDM下载器"></a>IDM下载器</h5><p><a href="https://www.internetdownloadmanager.com/">下载地址</a></p><p>免费许可证</p><p>使用管理员身份运行Power Shell</p><p>复制以下代码到Power Shell</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"># Enable TLSv1.2 for compatibility with older clients</span><br><span class="line"></span><br><span class="line">[System.Net.ServicePointManager]::SecurityProtocol = [System.Net.ServicePointManager]::SecurityProtocol -bor [System.Net.SecurityProtocolType]::Tls12</span><br><span class="line"></span><br><span class="line">$DownloadURL = &#x27;https://raw.githubusercontent.com/lstprjct/IDM-Activation-Script/main/IAS_0.8.cmd&#x27;</span><br><span class="line"></span><br><span class="line">$FilePath = &quot;$env:TEMP\IAS.cmd&quot;</span><br><span class="line"></span><br><span class="line">try &#123;</span><br><span class="line">    Invoke-WebRequest -Uri $DownloadURL -UseBasicParsing -OutFile $FilePath</span><br><span class="line">&#125; catch &#123;</span><br><span class="line">    Write-Error $_</span><br><span class="line">Return</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">if (Test-Path $FilePath) &#123;</span><br><span class="line">    Start-Process $FilePath -Wait</span><br><span class="line">    $item = Get-Item -LiteralPath $FilePath</span><br><span class="line">    $item.Delete()</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>回车后选择1，即可激活</p><p>这是一些许可证</p><p>OS5HG-K90NH-SXOGT-7JYEZ<br>R2C1T-O0KQO-JAVU2-4MMYP<br>M2A16-47AAW-6NLYP-V1E0J<br>IZO7M-360FW-QY1XP-AWLPN<br>46YFS-S9G7H-QZFWI-QQBQB<br>TUTR2-I2NHO-GQBC6-ZECWH<br>TUTR2-I2NHO-GQBC6-ZECWH</p><h5 id="PCL-II"><a href="#PCL-II" class="headerlink" title="PCL II"></a>PCL II</h5><p>没错，一个MC启动器，但百宝箱中有多线程下载器</p><p><a href="https://afdian.net/a/LTCat?tab=home">下载地址</a></p><h5 id="迅雷"><a href="#迅雷" class="headerlink" title="迅雷"></a>迅雷</h5><p>这个不方便挂链接，见群913653705</p><h4 id="安全"><a href="#安全" class="headerlink" title="安全"></a>安全</h4><h5 id="火绒安全"><a href="#火绒安全" class="headerlink" title="火绒安全"></a>火绒安全</h5><p><a href="https://www.huorong.cn/">下载地址</a></p><h5 id="VMware虚拟机"><a href="#VMware虚拟机" class="headerlink" title="VMware虚拟机"></a>VMware虚拟机</h5><p><a href="https://www.vmware.com/cn/products/workstation-pro/workstation-pro-evaluation.html">下载地址</a></p><p>附赠一些17 WORKSTATION PRO的激活码</p><p>MC60H-DWHD5-H80U9-6V85M-8280D</p><p>4A4RR-813DK-M81A9-4U35H-06KND</p><p>NZ4RR-FTK5H-H81C1-Q30QH-1V2LA</p><p>JU090-6039P-08409-8J0QH-2YR7F</p><p>4Y09U-AJK97-089Z0-A3054-83KLA</p><p>4C21U-2KK9Q-M8130-4V2QH-CF810</p><p>MC60H-DWHD5-H80U9-6V85M-8280D</p><p>ZA30U-DXF84-4850Q-UMMXZ-W6K8F</p><p>AC590-2XW97-48EFZ-TZPQE-MYHEA</p><p>YF39K-DLFE5-H856Z-6NWZE-XQ2XD</p><p>AC15R-FNZ16-H8DWQ-WFPNV-M28E2</p><p>CZ1J8-A0D82-489LZ-ZMZQT-P3KX6</p><p>YA11K-6YE8H-H89ZZ-EXM59-Y6AR0</p><p>VMware Workstation16 密钥：<br>ZF3R0-FHED2-M80TY-8QYGC-NPKYF</p><p>YF390-0HF8P-M81RQ-2DXQE-M2UT6</p><p>ZF71R-DMX85-08DQY-8YMNC-PPHV8</p><p>VMware Workstation Pro 15 激活许可证：<br>UY758-0RXEQ-M81WP-8ZM7Z-Y3HDA</p><p>VF750-4MX5Q-488DQ-9WZE9-ZY2D6</p><p>UU54R-FVD91-488PP-7NNGC-ZFAX6</p><p>YC74H-FGF92-081VZ-R5QNG-P6RY4</p><p>YC34H-6WWDK-085MQ-JYPNX-NZRA2</p><p>VMware Workstation Pro 14 激活许可证：<br>FF31K-AHZD1-H8ETZ-8WWEZ-WUUVA</p><p>CV7T2-6WY5Q-48EWP-ZXY7X-QGUWD</p><p>VMware Workstation Pro 12 激活许可证：<br>5A02H-AU243-TZJ49-GTC7K-3C61N</p><p>VF5XA-FNDDJ-085GZ-4NXZ9-N20E6</p><p>UC5MR-8NE16-H81WY-R7QGV-QG2D8</p><p>ZG1WH-ATY96-H80QP-X7PEX-Y30V4</p><p>AA3E0-0VDE1-0893Z-KGZ59-QGAVF</p><h5 id="Lenovo模拟器"><a href="#Lenovo模拟器" class="headerlink" title="Lenovo模拟器"></a>Lenovo模拟器</h5><p><a href="https://lestore.lenovo.com/detail/L100433">下载地址</a></p><h5 id="Mumu模拟器"><a href="#Mumu模拟器" class="headerlink" title="Mumu模拟器"></a>Mumu模拟器</h5><p><a href="https://mumu.163.com/">下载地址</a></p><h4 id="网络"><a href="#网络" class="headerlink" title="网络"></a>网络</h4><h5 id="Edge浏览器"><a href="#Edge浏览器" class="headerlink" title="Edge浏览器"></a>Edge浏览器</h5><p><a href="https://www.microsoft.com/zh-cn/edge/download?form=MA13FJ">下载地址</a></p><h6 id="插件推荐"><a href="#插件推荐" class="headerlink" title="插件推荐"></a>插件推荐</h6><p><a href="https://microsoftedge.microsoft.com/addons/detail/itab%E6%96%B0%E6%A0%87%E7%AD%BE%E9%A1%B5%E5%85%8D%E8%B4%B9chatgpt/inedkoakiaeepjoblbiiipedngonadhn?hl=zh-CN">iTab新标签页(免费ChatGPT) - Microsoft Edge Addons</a></p><p><a href="https://microsoftedge.microsoft.com/addons/detail/%E7%AF%A1%E6%94%B9%E7%8C%B4/iikmkjmpaadaobahmlepeloendndfphd?hl=zh-CN">篡改猴 - Microsoft Edge Addons</a></p><p><a href="https://microsoftedge.microsoft.com/addons/detail/bilibili%E5%93%94%E5%93%A9%E5%93%94%E5%93%A9%E4%B8%8B%E8%BD%BD%E5%8A%A9%E6%89%8B/cagicamgdlbdmonbclkpgiabbldodgae?hl=zh-CN">bilibili哔哩哔哩下载助手 - Microsoft Edge Addons</a></p><p><a href="https://microsoftedge.microsoft.com/addons/detail/%E8%A7%86%E9%A2%91%E4%B8%8B%E8%BD%BD%E6%89%A9%E5%B1%95cococutvideo-down/npdhgjfiikhgncaacnnodpfchmelnchm?hl=zh-CN">视频下载扩展-CocoCut-video downloader - Microsoft Edge Addons</a></p><p><a href="https://microsoftedge.microsoft.com/addons/detail/%E6%B2%89%E6%B5%B8%E5%BC%8F%E7%BF%BB%E8%AF%91-%E5%8F%8C%E8%AF%AD%E5%AF%B9%E7%85%A7%E7%BD%91%E9%A1%B5%E7%BF%BB%E8%AF%91-pdf%E6%96%87%E6%A1%A3%E7%BF%BB%E8%AF%91/amkbmndfnliijdhojkpoglbnaaahippg?hl=zh-CN">沉浸式翻译: 双语对照网页翻译 &amp; PDF文档翻译 - Microsoft Edge Addons</a></p><h5 id="Steam"><a href="#Steam" class="headerlink" title="Steam++"></a>Steam++</h5><p><a href="https://steampp.net/">下载地址</a></p><h5 id="RayLink"><a href="#RayLink" class="headerlink" title="RayLink"></a>RayLink</h5><p><a href="https://www.raylink.live/">下载地址</a></p><h5 id="章鱼网游加速器"><a href="#章鱼网游加速器" class="headerlink" title="章鱼网游加速器"></a>章鱼网游加速器</h5><p><a href="https://www.zyjsq6.com/">下载地址</a></p><p>按F12查看源码有一些哲♂学的东西</p><h5 id="LocalSend"><a href="#LocalSend" class="headerlink" title="LocalSend"></a>LocalSend</h5><p><a href="https://localsend.org/#/">下载地址</a></p><h4 id="存储"><a href="#存储" class="headerlink" title="存储"></a>存储</h4><h5 id="分区助手"><a href="#分区助手" class="headerlink" title="分区助手"></a>分区助手</h5><p><a href="https://www.disktool.cn/">下载地址</a></p><h5 id="Dism"><a href="#Dism" class="headerlink" title="Dism++"></a>Dism++</h5><p><a href="https://github.com/Chuyu-Team/Dism-Multi-language">下载地址</a></p><h4 id="文件"><a href="#文件" class="headerlink" title="文件"></a>文件</h4><h5 id="Everything"><a href="#Everything" class="headerlink" title="Everything"></a>Everything</h5><p><a href="https://www.voidtools.com/zh-cn/support/everything/">下载地址</a></p><h5 id="Typora"><a href="#Typora" class="headerlink" title="Typora"></a>Typora</h5><p><a href="https://typoraio.cn/">下载地址</a></p><p>体验见群</p><h5 id="Bandzip"><a href="#Bandzip" class="headerlink" title="Bandzip"></a>Bandzip</h5><p><a href="https://www.bandisoft.com/bandizip/">官方网站</a></p><p><a href="https://www.ghxi.com/bandizip.html">Bandizip免费许可证</a></p><h4 id="其他"><a href="#其他" class="headerlink" title="其他"></a>其他</h4><h5 id="Start11"><a href="#Start11" class="headerlink" title="Start11"></a>Start11</h5><p><a href="https://www.stardock.com/products/start11/">官网下载</a></p><p>免费版见群</p><h5 id="TranslucentTB"><a href="#TranslucentTB" class="headerlink" title="TranslucentTB"></a>TranslucentTB</h5><p><a href="https://apps.microsoft.com/store/detail/translucenttb/9PF4KZ2VN4W9?launch=true&mode=full&referrer=bingwebsearch&ocid=bingwebsearch">下载地址</a></p><h5 id="Office-Tool-Plus"><a href="#Office-Tool-Plus" class="headerlink" title="Office Tool Plus"></a>Office Tool Plus</h5><p><a href="https://otp.landian.vip/zh-cn/">下载地址</a></p><h5 id="iSlide"><a href="#iSlide" class="headerlink" title="iSlide"></a>iSlide</h5><p><a href="https://www.islide.cc/">下载地址</a></p><h5 id="Smart-Game-Booster"><a href="#Smart-Game-Booster" class="headerlink" title="Smart Game Booster"></a>Smart Game Booster</h5><p><a href="https://gamebooster.itopvpn.com/index.php">下载地址</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科技 </tag>
            
            <tag> 软件 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>搭建Hexo博客</title>
      <link href="//post/33825.html"/>
      <url>//post/33825.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是红石Hong，今天教大家搭建一个个人博客。</p><p>本期文章那个所需：</p><p><strong>能联网的电脑</strong></p><p><strong>GITHUB账户</strong></p><p><strong>有脑子的人（自主学习能力）</strong></p><h4 id="所需网站"><a href="#所需网站" class="headerlink" title="所需网站"></a>所需网站</h4><p>Node.JS:<a href="https://nodejs.org/zh-cn">Node.js</a></p><p>GIT：<a href="https://git-scm.com/downloads">Git - Downloads</a></p><p>Hexo：<a href="https://hexo.io/zh-cn/index.html">Hexo</a></p><p><a href="https://steampp.net/">Steam++</a></p><h4 id="环境准备"><a href="#环境准备" class="headerlink" title="环境准备"></a>环境准备</h4><p>依次安装后输入<code>node -v</code>检查node版号 <code>npm -v</code>npm版号 <code>git --version</code>git版号</p><p>然后我们需要注册一个github账户（有的可以不注册）</p><h5 id="关联GITHUB账户"><a href="#关联GITHUB账户" class="headerlink" title="关联GITHUB账户"></a>关联GITHUB账户</h5><p>使用邮箱注册 <a href="https://link.zhihu.com/?target=https://github.com/">GitHub</a> 账户，选择免费账户（Free），并完成邮件验证。</p><p>右键 -&gt; Git Bash Here，<strong>设置用户名和邮箱</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name &quot;GitHub 用户名&quot;</span><br><span class="line">git config --global user.email &quot;GitHub 邮箱&quot;</span><br></pre></td></tr></table></figure><p>输入 <code>ssh-keygen -t rsa -C &quot;GitHub 邮箱&quot;</code>，然后一路回车。</p><p>进入 [C:\Users\用户名.ssh] 目录（要勾选显示“隐藏的项目”），用记事本打开公钥 id_rsa.pub 文件并复制里面的内容。</p><p>登陆 GitHub ，进入 Settings 页面，选择左边栏的 SSH and GPG keys，点击 New SSH key。</p><p>Title 随便取个名字，粘贴复制的 id_rsa.pub 内容到 Key 中，点击 Add SSH key 完成添加。</p><p><img src="/../images/3/1.jpg" alt="1"></p><p>打开 Git Bash，输入 <code>ssh -T git@github.com</code> 出现 “Are you sure……”，输入 yes 回车确认。</p><p><img src="/../images/3/2.jpg" alt="2"></p><p>显示 “Hi xxx! You’ve successfully……” 即连接成功。</p><h5 id="创建仓库"><a href="#创建仓库" class="headerlink" title="创建仓库"></a>创建仓库</h5><p>GitHub 主页右上角加号 -&gt; New repository：</p><ul><li>Repository name 中输入 <code>用户名.github.io</code></li><li>勾选 “Initialize this repository with a README”</li><li>Description 选填</li></ul><p>填好后点击 Create repository 创建。</p><p><img src="/../images/3/3.jpg" alt="3"></p><p>创建后默认自动启用 github page服务，博客地址为：<code>https://用户名.github.io</code></p><h4 id="博客部署"><a href="#博客部署" class="headerlink" title="博客部署"></a>博客部署</h4><h5 id="本地创建"><a href="#本地创建" class="headerlink" title="本地创建"></a>本地创建</h5><p>我们需要前往<a href="https://hexo.io/zh-cn/index.html">hexo官网</a>安装hexo</p><p>或是直接输入<code>npm install -g hexo-cli</code></p><p>安装完成后我们需要运行以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo init      # 初始化</span><br><span class="line">npm install    # 安装组件</span><br></pre></td></tr></table></figure><p>然后我们输入以下命令：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo s   # 启动预览</span><br></pre></td></tr></table></figure><p>进入所给地址，即可访问本地博客</p><p><strong>Tips：</strong>如果出现页面加载不出来，可能是端口被占用了。Ctrl+C 关闭服务器，运行 <code>hexo server -p 5000</code> 更改端口号后重试。</p><p>Hexo 博客文件夹目录结构如下：</p><p><img src="/../images/3/4.jpg" alt="4"></p><h5 id="部署到github仓库"><a href="#部署到github仓库" class="headerlink" title="部署到github仓库"></a>部署到github仓库</h5><p>本地博客测试成功后，就是上传到 GitHub 进行部署，使其能够在网络上访问。</p><p>首先<strong>安装 hexo-deployer-git</strong>：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>然后<strong>修改 _config.yml</strong> 文件末尾的 Deployment 部分，修改成如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">  type: git</span><br><span class="line">  repository: git@github.com:用户名/用户名.github.io.git</span><br><span class="line">  branch: master</span><br></pre></td></tr></table></figure><p>完成后运行 <code>hexo d</code> 将网站上传部署到 GitHub Pages。</p><p>完成！这时访问我们的 GitHub 域名 <code>https://用户名.github.io</code> 就可以看到 Hexo 网站了。</p><h4 id="个性设置-乱七八糟的东西"><a href="#个性设置-乱七八糟的东西" class="headerlink" title="个性设置&amp;乱七八糟的东西"></a>个性设置&amp;乱七八糟的东西</h4><h5 id="更换主题"><a href="#更换主题" class="headerlink" title="更换主题"></a>更换主题</h5><p>在 <a href="https://link.zhihu.com/?target=https://hexo.io/themes/">Themes | Hexo</a> 选择一个喜欢的主题，比如 <a href="https://link.zhihu.com/?target=http://theme-next.iissnan.com/getting-started.html">NexT</a>，进入网站目录打开 Git Bash Here 下载主题：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git clone https://github.com/iissnan/hexo-theme-next themes/next</span><br></pre></td></tr></table></figure><p>然后修改 _config.yml 中的 theme 为新主题名称 next，发布。（有的主题需要将 _config.yml 替换为主题自带的，参考主题说明。）</p><h5 id="发布文章"><a href="#发布文章" class="headerlink" title="发布文章"></a>发布文章</h5><p>进入博客所在目录，右键打开 Git Bash Here，创建博文：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;My New Post&quot;</span><br></pre></td></tr></table></figure><p>然后 source 文件夹中会出现一个 My New Post.md 文件，就可以使用 Markdown 编辑器在该文件中撰写文章了。</p><p>写完后运行下面代码将文章渲染并部署到 GitHub Pages 上完成发布。<strong>以后每次发布文章都是这两条命令。</strong></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g   # 生成页面</span><br><span class="line">hexo d   # 部署发布</span><br></pre></td></tr></table></figure><hr><p>也可以不使用命令自己创建 .md 文件，只需在文件开头手动加入如下格式 Front-matter 即可，写完后运行 <code>hexo g</code> 和 <code>hexo d</code> 发布。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: Hello World # 标题</span><br><span class="line">date: 2019/3/26 hh:mm:ss # 时间</span><br><span class="line">categories: # 分类</span><br><span class="line">- Diary</span><br><span class="line">tags: # 标签</span><br><span class="line">- PS3</span><br><span class="line">- Games</span><br><span class="line">---</span><br><span class="line"></span><br><span class="line">摘要</span><br><span class="line">&lt;!--more--&gt;</span><br><span class="line">正文</span><br></pre></td></tr></table></figure><h5 id="常用命令"><a href="#常用命令" class="headerlink" title="常用命令"></a>常用命令</h5><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;name&quot;       # 新建文章</span><br><span class="line">hexo new page &quot;name&quot;  # 新建页面</span><br><span class="line">hexo g                # 生成页面</span><br><span class="line">hexo d                # 部署</span><br><span class="line">hexo g -d             # 生成页面并部署</span><br><span class="line">hexo s                # 本地预览</span><br><span class="line">hexo clean            # 清除缓存和已生成的静态文件</span><br><span class="line">hexo help             # 帮助</span><br></pre></td></tr></table></figure><h5 id="添加图片"><a href="#添加图片" class="headerlink" title="添加图片"></a>添加图片</h5><p>我们需要在boke\source\目录下创建名为images的文件夹</p><p>在其中可以新建多个文件夹，在其中加入图片</p><p>在编辑器中使用相对路径为..&#x2F;images&#x2F;3&#x2F;1.jpg</p><p>即可添加图片</p><h5 id="添加文章封面"><a href="#添加文章封面" class="headerlink" title="添加文章封面"></a>添加文章封面</h5><p>解决办法<br>选择在source文件夹下创建一个medias文件夹，然后里面放入图片，在coveri选项下：img&#x2F;图片名字，就可以引入</p><p><code>title: &#39;git问题记录&#39;</code><br><code>date: 2023-9-12 18:53:51</code><br><code>cover: /medias/git.jpg</code><br><code>tags: </code><br><code>git</code></p><p>参照：<a href="https://zhuanlan.zhihu.com/p/60578464">使用 Hexo+GitHub 搭建个人免费博客教程（小白向）</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 搭建 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>9月16日NewBing镜像部署方案</title>
      <link href="//post/43128.html"/>
      <url>//post/43128.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是红石，今天带来的是9月16日的NewBing镜像部署的教程</p><p>本期教程所需条件：</p><p><strong>1.能联网的电脑</strong></p><p><strong>2.可用的电话号码</strong></p><p><strong>3.微软账户</strong></p><h4 id="1-登录huggingface账户4"><a href="#1-登录huggingface账户4" class="headerlink" title="1.登录huggingface账户4"></a>1.登录huggingface账户4</h4><p>由于huggingface因为某些原因被墙了，所以我们要用到微软提供的云电脑服务</p><p>首先我们需要前往<a href="https://learn.microsoft.com/en-us/training/modules/implement-common-integration-features-finance-ops/10-exercise-1">这里</a>来登录开启虚拟机服务（个人建议：先开启微软的开发者计划，再来到此页面登录，否则容易出现一些乱七八糟的错误。沙盒过期的账户也是可用的）</p><p>注意：每个可用账户一天只有2小时的使用时间</p><p>由于服务器在海外，所以中国内陆的连接并不好，经常在1000ms以上，所以卡顿时在所难免的，所以不建议直接使用键盘输入，开启云电脑中的屏幕键盘，点击进行输入。</p><p>由于电脑默认为英文，建议自备翻译软件，不建议改中文是因为下载时间很长，且重启后不能保存，浪费时间。</p><p>我们需要在云电脑中的edge浏览器的地址栏中输入huggingface.co访问huggingface网站。输入账户密码，进行登录。</p><h4 id="2-搭建newbing镜像"><a href="#2-搭建newbing镜像" class="headerlink" title="2.搭建newbing镜像"></a>2.搭建newbing镜像</h4><p>我们需要点击上栏spaces按钮来到空间页面</p><p>并点击creat new space</p><p><img src="/../images/1/5.png" alt="5"></p><p>然后我们需要配置一下空间</p><p><img src="/../images/1/6.png" alt="6"></p><p>大概像我这样填就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个是介绍可改选项的</span><br><span class="line">1.space name 控制项目名称及以后生成的域名</span><br><span class="line">2.space hardware：控制配置的，不差钱可以选择别的选项</span><br></pre></td></tr></table></figure><p>然后我们点击下方的create space</p><p>接下来我们需要向下拉，找到带有下划线的Create</p><p><img src="/../images/1/7.png" alt="7"></p><p>点击它进入dockerfile</p><p>然后将下面的源码原封不动的复制到edit中</p><h5 id="fork代码"><a href="#fork代码" class="headerlink" title="fork代码"></a>fork代码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># Build Stage</span><br><span class="line"># 使用 golang:alpine 作为构建阶段的基础镜像</span><br><span class="line">FROM golang:alpine AS builder</span><br><span class="line"></span><br><span class="line"># 添加 git，以便之后能从GitHub克隆项目</span><br><span class="line">RUN apk --no-cache add git</span><br><span class="line"></span><br><span class="line"># 从 GitHub 克隆 go-proxy-bingai 项目到 /workspace/app 目录下</span><br><span class="line">RUN git clone https://github.com/Harry-zklcdc/go-proxy-bingai.git /workspace/app</span><br><span class="line"></span><br><span class="line"># 设置工作目录为之前克隆的项目目录</span><br><span class="line">WORKDIR /workspace/app</span><br><span class="line"></span><br><span class="line"># 编译 go 项目。-ldflags=&quot;-s -w&quot; 是为了减少编译后的二进制大小</span><br><span class="line">RUN go build -ldflags=&quot;-s -w&quot; -tags netgo -trimpath -o go-proxy-bingai main.go</span><br><span class="line"></span><br><span class="line"># Runtime Stage</span><br><span class="line"># 使用轻量级的 alpine 镜像作为运行时的基础镜像</span><br><span class="line">FROM alpine</span><br><span class="line"></span><br><span class="line"># 设置工作目录</span><br><span class="line">WORKDIR /workspace/app</span><br><span class="line"></span><br><span class="line"># 从构建阶段复制编译后的二进制文件到运行时镜像中</span><br><span class="line">COPY --from=builder /workspace/app/go-proxy-bingai .</span><br><span class="line"></span><br><span class="line"># 设置环境变量，此处为随机字符</span><br><span class="line">ENV Go_Proxy_BingAI_USER_TOKEN_1=&quot;kJs8hD92ncMzLaoQWYtX5rG6bE3fZ4iO&quot;</span><br><span class="line"></span><br><span class="line"># 暴露8080端口</span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line"># 容器启动时运行的命令</span><br><span class="line">CMD [&quot;/workspace/app/go-proxy-bingai&quot;]</span><br></pre></td></tr></table></figure><p>完成后点击commit new file to main即可</p><p>但我们还没有彻底完成</p><p>我们需要返回文件目录，找到README.md文件</p><p><img src="/../images/1/8.png" alt="8"></p><p>点击并进入编辑（edit）界面</p><p><img src="/../images/1/9.png" alt="9"></p><p>在下方添加</p><h5 id="端口代码"><a href="#端口代码" class="headerlink" title="端口代码"></a>端口代码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app_port: 8080</span><br></pre></td></tr></table></figure><p>点击下方的commit change to main即可</p><p>之后我们需要前往App界面</p><p><img src="/../images/1/0.png" alt="0"></p><p>就可以看到我们的bing部署好了</p><h4 id="3-访问站点"><a href="#3-访问站点" class="headerlink" title="3.访问站点"></a>3.访问站点</h4><p>我们的镜像站点搭建好了，我们该如何访问呢？</p><p>只需要选择服务，复制本站地址或是在浏览器地址栏输入以下格式</p><p>huggingface用户名-space名.hf.space</p><p>即可访问</p><p>如果你有任何疑问只需要加入我的QQ群即可（见博客关于页面）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 科技 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JetBrains免费许可证</title>
      <link href="//post/59887.html"/>
      <url>//post/59887.html</url>
      
        <content type="html"><![CDATA[<p>免责声明：</p><p>本文章（视频）仅用于学习，交流使用。切勿用于商业用途！！！</p><p>有能力务必支持正版！！！！！！</p><p>本插件支持目前（2023&#x2F;8&#x2F;28）的最新版本（2023&#x2F;2&#x2F;1）且支持新UI</p><h2 id="Step1：下载官网安装包"><a href="#Step1：下载官网安装包" class="headerlink" title="Step1：下载官网安装包"></a>Step1：下载官网安装包</h2><p>我们需要前往<a href="https://www.jetbrains.com/">JetBrains</a>官网来下载我们所需要的安装包（以Pycharm举例）</p><p><img src="/../images/2/1.png" alt="1"></p><p>下载Professional版本</p><p><img src="/../images/2/2.png" alt="2"></p><p>打开安装（记得添加到环境变量）</p><p>打开软件后会弹出激活弹窗</p><p><img src="/../images/2/3.png" alt="3"></p><p>这个时候就需要我们运行补丁来添加激活了</p><h2 id="Step2：获取激活补丁"><a href="#Step2：获取激活补丁" class="headerlink" title="Step2：获取激活补丁"></a>Step2：获取激活补丁</h2><h3 id="获取方式1："><a href="#获取方式1：" class="headerlink" title="获取方式1："></a>获取方式1：</h3><p>加入QQ群：913653705获取</p><h3 id="获取方式2："><a href="#获取方式2：" class="headerlink" title="获取方式2："></a>获取方式2：</h3><p>前往<a href="https://wwbh.lanzouw.com/b04wf2hja">这里</a>获取补丁，密码：220A</p><h2 id="Step3：获取激活码"><a href="#Step3：获取激活码" class="headerlink" title="Step3：获取激活码"></a>Step3：获取激活码</h2><p>我们需要前往<a href="https://3.jetbra.in/">这里</a>来获取最快的站点(建议晚上访问，加载出的站点会更多)</p><p><img src="/../images/2/4.png" alt="4"></p><p>它会加载出一些可用站点，但有时点击去不是正常界面，那我们就需要换一个站点继续尝试，如果哪个站点都不行的话请移步到QQ群</p><p>直到加载出类似于这样的界面：</p><p><img src="/../images/2/5.png" alt="5"></p><p>Tips:某些浏览器可能提示站点不安全，放不下心的朋友们可以选择使用虚拟机或是前往QQ群获取你所需要的秘钥</p><p>然后我们需要将先前下载的补丁解压出来</p><p><img src="/../images/2/6.png" alt="6"></p><p>进入scripts文件夹</p><p><img src="/../images/2/7.png" alt="7"></p><p>这里install-all-users是安装到所有用户，install-current-user是安装到当前用户</p><p>同理，uninstall-all-users是卸载所有用户补丁，uninstall-current-user是卸载当前用户补丁</p><p>点击后会有一个弹窗</p><p><img src="/../images/2/8.png" alt="8"></p><p>我们点击确定，等待一会后会有一个Done弹窗</p><p><img src="/../images/2/9.png" alt="9"></p><p>就代表我们安装好了，这个时候打开软件，输入对应的激活码就行了</p><p>这个时候我们的IDE就激活了</p><p><img src="/../images/2/10.png" alt="10"></p><p>以上便是这篇文章的所有内容，感谢您的阅读</p>]]></content>
      
      
      
        <tags>
            
            <tag> 软件 </tag>
            
            <tag> 激活 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码搭建NewBing</title>
      <link href="//post/36894.html"/>
      <url>//post/36894.html</url>
      
        <content type="html"><![CDATA[<p>大家好，我是红石Hong，欢迎来到我的个人博客</p><p>接下来，我将用十分钟，教你搭建一个国内可用的NewBing</p><p><strong>无需魔法</strong></p><p><strong>无需候补账号</strong></p><p><strong>无需服务器，域名</strong></p><p><strong>小白也能部署的网站！</strong></p><p>接下来，让我们开始吧</p><h2 id="注册HuggingFace账号"><a href="#注册HuggingFace账号" class="headerlink" title="注册HuggingFace账号"></a>注册HuggingFace账号</h2><p>我们需要前往<a href="https://huggingface.co/">HuggingFace</a>注册一个账号 </p><p><img src="/../images/1/1.png" alt="1"></p><p>然后我们需要输入我们的邮箱和密码（这里要求大小写字母+数字）</p><p>然后我们点击Next</p><p><img src="/../images/1/2.png" alt="2"></p><p>这里只需要填写Username与FullName即可</p><p>注册成功后我们要验证我们的邮箱</p><p>点击头像，选择设置</p><p><img src="/../images/1/3.png"></p><p><img src="/../images/1/4.png" alt="4"></p><p>选择account选项卡后在Primary email下方会有一个验证按钮</p><p>点击后会向邮箱中发送一封验证邮件，点击邮件中的链接即可完成验证</p><h2 id="开始搭建NewBing项目"><a href="#开始搭建NewBing项目" class="headerlink" title="开始搭建NewBing项目"></a>开始搭建NewBing项目</h2><h3 id="方法一：链接一键部署（不稳定，可能失效）"><a href="#方法一：链接一键部署（不稳定，可能失效）" class="headerlink" title="方法一：链接一键部署（不稳定，可能失效）"></a>方法一：链接一键部署（不稳定，可能失效）</h3><p>点击下方链接即可一键部署：</p><p><a href="https://huggingface.co/spaces/HongShi2333/BingSpace/blob/main/README.md?duplicate=true&visibility=public">链接一</a></p><p><a href="https://huggingface.co/login?next=/spaces/dongsiqie/bing?duplicate=true&visibility=public">链接二</a></p><h3 id="方法二：代码部署（更加稳定，不易失效）"><a href="#方法二：代码部署（更加稳定，不易失效）" class="headerlink" title="方法二：代码部署（更加稳定，不易失效）"></a>方法二：代码部署（更加稳定，不易失效）</h3><p>我们需要点击上栏spaces按钮来到空间页面</p><p>并点击creat new space</p><p><img src="/../images/1/5.png" alt="5"></p><p>然后我们需要配置一下空间</p><p><img src="/../images/1/6.png" alt="6"></p><p>大概像我这样填就可以了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">这个是介绍可改选项的</span><br><span class="line">1.space name 控制项目名称及以后生成的域名</span><br><span class="line">2.space hardware：控制配置的，不差钱可以选择别的选项</span><br></pre></td></tr></table></figure><p>然后我们点击下方的create space</p><p>接下来我们需要向下拉，找到带有下划线的Create</p><p><img src="/../images/1/7.png" alt="7"></p><p>点击它进入dockerfile</p><p>然后将下面的源码原封不动的复制到edit中</p><h5 id="fork代码"><a href="#fork代码" class="headerlink" title="fork代码"></a>fork代码</h5><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"># Build Stage</span><br><span class="line"># 使用 golang:alpine 作为构建阶段的基础镜像</span><br><span class="line">FROM golang:alpine AS builder</span><br><span class="line"></span><br><span class="line"># 添加 git，以便之后能从GitHub克隆项目</span><br><span class="line">RUN apk --no-cache add git</span><br><span class="line"></span><br><span class="line"># 从 GitHub 克隆 go-proxy-bingai 项目到 /workspace/app 目录下</span><br><span class="line">RUN git clone https://github.com/Harry-zklcdc/go-proxy-bingai.git /workspace/app</span><br><span class="line"></span><br><span class="line"># 设置工作目录为之前克隆的项目目录</span><br><span class="line">WORKDIR /workspace/app</span><br><span class="line"></span><br><span class="line"># 编译 go 项目。-ldflags=&quot;-s -w&quot; 是为了减少编译后的二进制大小</span><br><span class="line">RUN go build -ldflags=&quot;-s -w&quot; -tags netgo -trimpath -o go-proxy-bingai main.go</span><br><span class="line"></span><br><span class="line"># Runtime Stage</span><br><span class="line"># 使用轻量级的 alpine 镜像作为运行时的基础镜像</span><br><span class="line">FROM alpine</span><br><span class="line"></span><br><span class="line"># 设置工作目录</span><br><span class="line">WORKDIR /workspace/app</span><br><span class="line"></span><br><span class="line"># 从构建阶段复制编译后的二进制文件到运行时镜像中</span><br><span class="line">COPY --from=builder /workspace/app/go-proxy-bingai .</span><br><span class="line"></span><br><span class="line"># 设置环境变量，此处为随机字符</span><br><span class="line">ENV Go_Proxy_BingAI_USER_TOKEN_1=&quot;kJs8hD92ncMzLaoQWYtX5rG6bE3fZ4iO&quot;</span><br><span class="line"></span><br><span class="line"># 暴露8080端口</span><br><span class="line">EXPOSE 8080</span><br><span class="line"></span><br><span class="line"># 容器启动时运行的命令</span><br><span class="line">CMD [&quot;/workspace/app/go-proxy-bingai&quot;]</span><br></pre></td></tr></table></figure><p>完成后点击commit new file to main即可</p><p>但我们还没有彻底完成</p><p>我们需要返回文件目录，找到README.md文件</p><p><img src="/../images/1/8.png" alt="8"></p><p>点击并进入编辑（edit）界面</p><p><img src="/../images/1/9.png" alt="9"></p><p>在下方添加</p><h4 id="端口代码"><a href="#端口代码" class="headerlink" title="端口代码"></a>端口代码</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">app_port: 8080</span><br></pre></td></tr></table></figure><p>点击下方的commit change to main即可</p><p>之后我们需要前往App界面</p><p><img src="/../images/1/0.png" alt="0"></p><p>就可以看到我们的bing部署好了</p><p>（喂，不去我的<a href="https://space.bilibili.com/522549816">B站主页</a>看看吗？）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 网站 </tag>
            
            <tag> 科技 </tag>
            
            <tag> 人工智能 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
